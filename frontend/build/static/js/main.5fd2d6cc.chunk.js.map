{"version":3,"sources":["components/Footer.jsx","components/Navigation.jsx","pages/Home.jsx","components/forms/TextField.jsx","pages/Register.jsx","pages/Login.jsx","pages/Logout.jsx","pages/Account.jsx","components/passwords/BasicField.jsx","components/passwords/CopyableField.jsx","components/passwords/Item.jsx","components/passwords/Collection.jsx","components/Loader.jsx","pages/Passwords.jsx","components/forms/TextArea.jsx","components/passwords/Details.jsx","pages/View.jsx","Routes.jsx","services/AuthService.js","services/APIService.js","services/DocumentService.js","App.js","serviceWorker.js","index.js"],"names":["Footer","react_default","a","createElement","className","href","loggedOutItems","key","react_router_dom","to","loggedInItems","Navigation","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","sidebarRef","React","createRef","inherits","createClass","value","_this2","setTimeout","window","M","Sidenav","init","current","getInstance","close","loggedIn","services","authService","sessionExists","items","data-target","id","ref","Component","withRouter","Home","alt","src","concat","process","TextField","updateTextFields","autoFocus","focus","_this$props","label","onChange","error","type","icon","autoComplete","e","target","htmlFor","data-error","defaultProps","Register","state","username","password","usernameError","passwordError","preventDefault","isOkay","setState","_this$state","documentService","createDocument","then","history","push","catch","err","console","log","objectSpread","errorMessage","_","get","clearErrors","_this3","TextField_TextField","val","updateUsername","updatePassword","name","onClick","submit","Login","setCredentials","loadDocument","Logout","_ref","logout","react_router","Account","oldPassword","newPassword","oldPasswordError","newPasswordError","anyErrors","passwordMatchesSession","confirm","deleteDocument","alert","_this4","updateOldPassword","updateNewPassword","submitPassword","submitDelete","BasicField","title","children","CopyableField","buttonRef","el","document","body","appendChild","select","execCommand","removeChild","copied","mask","repeat","length","copyToClipboard","getValue","renderField","BasicField_BasicField","renderToggleLink","Item","item","website","rel","renderTitle","CopyableField_CopyableField","renderViewButton","Collection","passwords","map","Item_Item","Loader","Passwords","query","toLowerCase","trim","some","field","indexOf","chain","filter","p","applyFilter","uuid","email","notes","toConsumableArray","updateDocument","_this5","onSubmit","createPassword","Collection_Collection","getPasswords","Loader_Loader","TextArea","textareaAutoResize","$","Details","errors","defineProperty","deletePassword","updateItem","TextArea_TextArea","handleSave","handleDelete","View","indexToUpdate","findIndex","indexToDelete","splice","match","params","find","Details_Details","AppRouter","PageComponent","extraProps","assign","src_components_Navigation","path","exact","render","renderPage","AuthService","apiService","sha256","toString","token","hashPassword","getToken","_ref2","sessionStorage","setItem","setToken","getUsername","getItem","clear","hashToken","text","arguments","undefined","AES","encrypt","decrypt","UTF_8","getHashedToken","encoded","btoa","Authorization","APIService","baseURL","axios","defaults","headers","common","method","url","data","initialDocument","JSON","stringify","encryptedDocument","encryptWithToken","post","getHeaders","resp","decryptedDocument","decryptWithToken","parse","unencryptedDocument","put","del","hashedToken","location","origin","DocumentService","App","Routes_AppRouter","Boolean","hostname","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5fd2d6cc.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Footer() {\n  return (\n    <footer className=\"cp-footer page-footer\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s12\">\n              <a className=\"grey-text text-lighten-4 right\" href=\"https://clintonmorrison.com\">Created by Clinton Morrison.</a>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}","import React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\n\nimport './Navigation.scss';\n\nconst loggedOutItems = [\n  <li key=\"register\"><Link to=\"/register\">Register</Link></li>,\n  <li key=\"login\"><Link to=\"/login\">Login</Link></li>,\n];\n\nconst loggedInItems = [\n  <li key=\"account\"><Link to=\"/account\">My Account</Link></li>,\n  <li key=\"passwords\"><Link to=\"/passwords\">My Passwords</Link></li>,\n  <li key=\"logout\"><Link to=\"/logout\">Logout</Link></li>\n];\n\n\nexport class Navigation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.sidebarRef = React.createRef();\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      window.M.Sidenav.init(this.sidebarRef.current);\n    }, 0);\n  }\n\n  componentDidUpdate() {\n    window.M.Sidenav.getInstance(this.sidebarRef.current).close();\n  }\n\n  render() {\n    const { services } = this.props;\n    const loggedIn = services.authService.sessionExists();\n\n    const items = loggedIn ? loggedInItems : loggedOutItems;\n\n    return (\n      <div className=\"cp-navigation\">\n        <nav>\n          <div className=\"nav-wrapper\">\n            <Link to=\"/\" className=\"brand-logo\">Lorikeet</Link>\n            <a href=\"#\" data-target=\"mobile-demo\" className=\"sidenav-trigger right hide-on-med-and-up\">\n              <i className=\"material-icons\">menu</i>\n            </a>\n            <ul className=\"right hide-on-small-and-down\">\n              {items}\n            </ul>\n          </div>\n        </nav>\n\n        <ul className=\"sidenav\" id=\"mobile-demo\" ref={this.sidebarRef}>\n          {items}\n        </ul>\n      </div>\n  );\n\n\n    return (\n      <nav className=\"\">\n        <div className=\"cp-navigation\">\n          <Link to=\"/\" className=\"brand-logo\">Lorikeet</Link>\n          <ul id=\"nav-mobile\" className=\"right\">\n            {loggedIn ? loggedInItems : loggedOutItems}\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default withRouter(Navigation);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Home.scss';\n\nexport default function Home() {\n  return (\n    <div className=\"cp-home\">\n      <div className=\"heading\">\n        <h1>Lorikeet</h1>\n        <p className=\"subtitle\">A secure online password manager.</p>\n      </div>\n\n\n      <div className=\"bird-banner\">\n        <img alt=\"\" src={`${process.env.PUBLIC_URL}/bird_large.png`} />\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col s12 m4\">\n          <div className=\"center promo promo-example\">\n            <i className=\"material-icons large\">spa</i>\n            <h5 className=\"promo-caption\">Easy</h5>\n            <p className=\"light center\">\n              You can stop keeping track of your passwords. It's easy to manage your passwords with Lorikeet.\n            </p>\n          </div>\n        </div>\n\n        <div className=\"col s12 m4\">\n          <div className=\"center promo promo-example\">\n            <i className=\"material-icons large\">vpn_key</i>\n            <h5 className=\"promo-caption\">Secure</h5>\n            <p className=\"light center\">\n              With strong AES encryption on the client-side and server-side, you don't need to worry about your passwords.\n            </p>\n          </div>\n        </div>\n\n        <div className=\"col s12 m4\">\n          <div className=\"center promo promo-example\">\n            <i className=\"material-icons large\">favorite</i>\n            <h5 className=\"promo-caption\">Free</h5>\n            <p className=\"light center\">\n              Lorikeet is free to use, and <a href=\"https://github.com/ClintonMorrison/lorikeet\">open source</a>.\n              It was created with Golang and React. If you like it you can <a href=\"https://ko-fi.com/T6T0VOWY\">support me on Ko-fi</a>.\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <Link to=\"/register\" className=\"sign-up-link waves-effect waves-light btn-large btn\">Sign Up Now</Link>\n    </div>\n  );\n}","import React from 'react';\n\nexport default class TextField extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      window.M.updateTextFields();\n      if (this.props.autoFocus) {\n        this.ref.current.focus();\n      }\n    }, 0);\n  }\n\n  render () {\n    const {\n      id,\n      label,\n      onChange,\n      value,\n      error,\n      type,\n      icon\n    } = this.props;\n\n    return (\n      <div className=\"cp-text-field row\">\n        <div className=\"input-field col s12\">\n          {icon && (<i className=\"material-icons prefix\">{icon}</i>)}\n          <input\n            id={id}\n            type={type}\n            className={error ? 'invalid' : ''}\n            autoComplete={this.props.autoComplete}\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n            ref={this.ref} />\n          <label htmlFor={id}>{label}</label>\n          <span className=\"helper-text\" data-error={error} />\n        </div>\n      </div>\n    );\n  }\n}\n\nTextField.defaultProps = {\n  type: 'text'\n};\n","import React from 'react';\nimport _ from 'lodash';\n\nimport TextField from '../components/forms/TextField';\n\nexport default class Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      usernameError: \"\",\n      passwordError: \"\"\n    };\n  }\n\n  submit(e) {\n    e.preventDefault();\n\n    let isOkay = true;\n\n    if (!this.state.username) {\n      this.setState({ usernameError: \"Username cannot be empty\" });\n      isOkay = false;\n    }\n\n    if (!this.state.password) {\n      this.setState({ passwordError: \"Password cannot be empty\" });\n      isOkay = false;\n    }\n\n    if (!isOkay) {\n      return;\n    }\n\n    const { username, password } = this.state;\n    this.props.services.documentService.createDocument({ username, password })\n      .then(() => {\n        this.props.history.push('/passwords')\n      })\n      .catch(err => {\n        console.log({ ...err });\n        const errorMessage = _.get(err, 'response.data.error', 'An error occurred.');\n        if (errorMessage) {\n          this.setState({ usernameError: errorMessage });\n        }\n    });\n  }\n\n  clearErrors() {\n    this.setState({\n      usernameError: \"\",\n      passwordError: \"\"\n    });\n  }\n\n  updateUsername(username) {\n    this.clearErrors();\n    this.setState({ username });\n  }\n\n  updatePassword(password) {\n    this.clearErrors();\n    this.setState({ password });\n  }\n\n  render() {\n    return (\n      <div className=\"cp-register\">\n        <h1>Sign Up</h1>\n\n        <div className=\"row\">\n          <form className=\"col s12\">\n            <div className=\"row\">\n              <div className=\"col s12\">\n                Enter a username and a strong password for your new account.\n\n                <p>\n                  <strong>Please write down your account information and keep it safe. </strong>\n                </p>\n\n                <p>\n                  Because of how your data will be encrypted, it will not be possible to regain\n                  control of your account if you forget.\n                </p>\n              </div>\n            </div>\n\n            <TextField\n              label=\"Username\"\n              id=\"username\"\n              value={this.state.username}\n              error={this.state.usernameError}\n              onChange={val => this.updateUsername(val)} />\n\n            <TextField\n              label=\"Password\"\n              id=\"password\"\n              type=\"password\"\n              value={this.state.password}\n              error={this.state.passwordError}\n              onChange={val => this.updatePassword(val)} />\n\n            <div className=\"row\">\n              <div className=\"input-field col s12\">\n                <button\n                  className=\"btn waves-effect waves-light\"\n                  type=\"submit\"\n                  name=\"action\"\n                  onClick={(e) => this.submit(e)}>\n                  Register\n                </button>\n              </div>\n            </div>\n\n          </form>\n        </div>\n      </div>\n    );\n\n  }\n}","import React from 'react';\nimport _ from 'lodash';\n\nimport TextField from '../components/forms/TextField';\n\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      usernameError: \"\",\n      passwordError: \"\"\n    };\n  }\n\n  submit(e) {\n    e.preventDefault();\n\n    let isOkay = true;\n\n    if (!this.state.username) {\n      this.setState({ usernameError: \"Username cannot be empty\" });\n      isOkay = false;\n    }\n\n    if (!this.state.password) {\n      this.setState({ passwordError: \"Password cannot be empty\" });\n      isOkay = false;\n    }\n\n    if (!isOkay) {\n      return;\n    }\n\n    const { username, password } = this.state;\n    this.props.services.authService.setCredentials({ username, password });\n    this.props.services.documentService.loadDocument()\n      .then(() => {\n        this.props.history.push('/passwords');\n      })\n      .catch(err => {\n        console.log(err);\n        const errorMessage = _.get(err, 'response.data.error', 'An error occurred.');\n        if (errorMessage) {\n          this.setState({ usernameError: errorMessage, passwordError: ' ' });\n        }\n      });\n  }\n\n  clearErrors() {\n    this.setState({\n      usernameError: \"\",\n      passwordError: \"\"\n    });\n  }\n\n  updateUsername(username) {\n    this.clearErrors();\n    this.setState({ username });\n  }\n\n  updatePassword(password) {\n    this.clearErrors();\n    this.setState({ password });\n  }\n\n  render() {\n    return (\n      <div className=\"cp-login\">\n        <h1>Login</h1>\n\n        <div className=\"row\">\n          <form className=\"col s12\">\n            <div className=\"row\">\n              <div className=\"col s12\">\n                Enter your username and password to login.\n              </div>\n            </div>\n\n            <TextField\n              label=\"Username\"\n              id=\"username\"\n              autoComplete=\"username\"\n              value={this.state.username}\n              error={this.state.usernameError}\n              onChange={e => this.updateUsername(e)} />\n\n            <TextField\n              label=\"Password\"\n              id=\"password\"\n              autoComplete=\"password\"\n              type=\"password\"\n              value={this.state.password}\n              error={this.state.passwordError}\n              onChange={e => this.updatePassword(e)} />\n\n            <div className=\"row\">\n              <div className=\"input-field col s12\">\n                <button\n                  className=\"btn waves-effect waves-light\"\n                  type=\"submit\"\n                  name=\"action\"\n                  onClick={(e) => this.submit(e)}>\n                  Login\n                </button>\n              </div>\n            </div>\n\n          </form>\n        </div>\n      </div>\n    );\n\n  }\n}","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport default function Logout({ services}) {\n  services.authService.logout();\n  return <Redirect to=\"/login\" />;\n}\n","import React from 'react';\nimport _ from 'lodash';\nimport TextField from '../components/forms/TextField';\n\nimport './Account.scss';\n\nexport default class Account extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      oldPassword: \"\",\n      newPassword: \"\",\n      oldPasswordError: \"\",\n      newPasswordError: \"\"\n    };\n  }\n\n  submitPassword(e) {\n    e.preventDefault();\n    this.clearErrors();\n\n    let anyErrors = false;\n    if (!this.state.oldPassword) {\n      this.setState({ oldPasswordError: 'Old password cannot be empty' });\n      anyErrors = true;\n    }\n\n    if (!this.state.newPassword) {\n      this.setState({ newPasswordError: 'New password cannot be empty' });\n      anyErrors = true;\n    }\n\n    if (!this.state.oldPassword) {\n      this.setState({ oldPasswordError: 'Old password cannot be empty' });\n      anyErrors = true;\n    }\n\n    if (!this.props.services.authService.passwordMatchesSession(this.state.oldPassword)) {\n      this.setState({ oldPasswordError: 'Old password is incorrect' });\n      anyErrors = true;\n\n    }\n\n    if (anyErrors) {\n      return;\n    }\n\n    this.props.services.documentService.updatePassword(this.state.newPassword).then(() => {\n      this.props.history.push('/passwords');\n    }).catch(err => {\n      const newPasswordError = _.get(err, 'response.data.error', 'An error occurred.');\n      this.setState({ newPasswordError });\n    });\n  }\n\n  submitDelete(e) {\n    e.preventDefault();\n\n    const confirmed = window.confirm(\"Are you sure you want to delete your account? All your password data will be permanently deleted.\");\n    if (confirmed) {\n      this.props.services.documentService.deleteDocument().then(() => {\n        this.props.history.push('/logout');\n      }).catch(err => {\n        const errorMessage = _.get(err, 'response.data.error', 'An error occurred.');\n        alert(errorMessage);\n      });\n    }\n  }\n\n  clearErrors() {\n    this.setState({\n      oldPasswordError: \"\",\n      newPasswordError: \"\"\n    });\n  }\n\n  updateOldPassword(oldPassword) {\n    this.clearErrors();\n    this.setState({ oldPassword });\n  }\n\n  updateNewPassword(newPassword) {\n    this.clearErrors();\n    this.setState({ newPassword });\n  }\n\n  render() {\n    return (\n      <div className=\"cp-account\">\n        <h1>Account</h1>\n\n        <div className=\"row\">\n          <form className=\"col s12\">\n            <h2>Change Password</h2>\n            <p>\n              <strong>Please write down your new password and keep it safe. </strong>\n            </p>\n\n            <p>\n              Because of how your data will be encrypted, it will not be possible to regain\n              control of your account if you forget.\n            </p>\n            <TextField\n              label=\"Old Password\"\n              id=\"old-passwrd\"\n              type=\"password\"\n              value={this.state.oldPassword}\n              error={this.state.oldPasswordError}\n              onChange={val => this.updateOldPassword(val)} />\n\n            <TextField\n              label=\"New Password\"\n              id=\"new-password\"\n              type=\"password\"\n              value={this.state.newPassword}\n              error={this.state.newPasswordError}\n              onChange={val => this.updateNewPassword(val)} />\n\n            <div className=\"row\">\n              <div className=\"input-field col s12\">\n                <button\n                  className=\"btn waves-effect waves-light\"\n                  type=\"submit\"\n                  name=\"action\"\n                  onClick={(e) => this.submitPassword(e)}>\n                  Update Password\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n\n\n        <div className=\"row\">\n          <form className=\"col s12\">\n            <h2>Delete Account</h2>\n            <p>\n              If you no longer which you use Lorikeet to manage your passwords you can delete your account.\n              This will delete all your stored passwords, and account data.\n              You will not be able to login again, or view your passwords.\n            </p>\n\n            <p>\n              <strong>This is irreversible.</strong>\n            </p>\n            <div className=\"row\">\n              <div className=\"input-field col s12\">\n                <button\n                  className=\"btn waves-effect waves-light btn-negative\"\n                  type=\"submit\"\n                  name=\"action\"\n                  onClick={(e) => this.submitDelete(e)}>\n                  Delete All Data\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n\n  }\n}","import React from 'react';\n\nimport './BasicField.scss';\n\nexport default function BasicField({ title, value, className, children }) {\n  if (!value) {\n    return null;\n  }\n\n  return (\n    <div className={`cp-basic-field ${className}`}>\n      <strong>{title}</strong>: {value}\n      {children}\n    </div>\n  );\n}\n\nBasicField.defaultProps = {\n  className: \"\"\n};\n","import React from 'react';\nimport _ from 'lodash';\nimport BasicField from \"./BasicField\";\n\nimport './CopyableField.scss';\n\nexport default class CopyableField extends React.Component {\n  constructor(props) {\n    super(props);\n    this.buttonRef = React.createRef();\n  }\n\n  copyToClipboard(e) {\n    e.preventDefault();\n    const el = document.createElement('textarea');\n    el.value = this.props.value;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n    e.target.focus();\n    this.setState({ copied: true });\n  };\n\n\n  getValue() {\n    return this.props.mask ?\n      _.repeat('•', this.props.value.length) :\n      this.props.value;\n  }\n\n  renderToggleLink() {\n    return (\n      <button\n        className=\"copy-button btn-small waves-effect waves-light btn-negative\"\n        onClick={(e) => this.copyToClipboard(e)}\n        ref={this.buttonRef}>\n        <i className=\"material-icons left\">content_copy</i>\n        {this.props.title}\n      </button>\n    );\n  }\n\n  render() {\n    const value = this.getValue();\n    return (\n      <div className=\"cp-copyable-field\">\n        {this.props.renderField && <BasicField\n          className=\"cp-copyable-field\"\n          title={this.props.title}\n          value={value} />}\n        {this.renderToggleLink()}\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport CopyableField from \"./CopyableField\";\n\nimport './Item.scss';\n\nexport default class Item extends React.Component {\n  renderTitle() {\n    const { item } = this.props;\n    const title = item.title || 'Untitled';\n    if (!item.website) {\n      return title;\n    }\n\n    return (\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href={item.website}>{title}</a>\n    );\n  }\n\n  renderViewButton() {\n    return (\n      <Link className=\"waves-effect waves-light btn-small\" to={`/passwords/${this.props.item.id}`}>\n        <i className=\"material-icons\">edit</i>\n      </Link>\n    );\n  }\n\n\n  render() {\n    const { item } = this.props;\n    return (\n      <li className=\"cp-item collection-item\">\n        <span className=\"title\">{this.renderTitle()}</span>\n        <CopyableField title=\"Username\" value={item.username} />\n        <CopyableField title=\"Password\" value={item.password} mask />\n        {this.renderViewButton()}\n      </li>\n    );\n  }\n}\n","import React from 'react';\nimport Item from \"./Item\";\n\nexport default class Collection extends React.Component {\n  render() {\n    return (\n      <ul className=\"collection\">\n        {this.props.passwords.map(item => <Item key={item.id || item.title} item={item} />)}\n      </ul>\n    );\n  }\n}","import React from 'react';\n\nimport './Loader.scss';\n\nexport default function Loader() {\n  return (\n    <div className=\"cp-loader\">\n      <div className=\"preloader-wrapper big active\">\n        <div className=\"spinner-layer spinner-blue-only\">\n          <div className=\"circle-clipper left\">\n            <div className=\"circle\" />\n          </div>\n          <div className=\"gap-patch\">\n            <div className=\"circle\" />\n        </div><div className=\"circle-clipper right\">\n          <div className=\"circle\" />\n        </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport _ from 'lodash';\nimport Collection from \"../components/passwords/Collection\";\nimport Loader from \"../components/Loader\";\nimport TextField from \"../components/forms/TextField\";\n\nimport './Passwords.scss';\nimport uuid from \"uuid/v4\";\n\nexport default class Passwords extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: '',\n      document: null\n    };\n  }\n\n  applyFilter(password) {\n    const query = this.state.query.toLowerCase().trim();\n\n    if (!query) {\n      return true;\n    }\n\n    const fields = ['title', 'notes', 'website'];\n\n    return fields.some(field => password[field].toLowerCase().trim().indexOf(query) !== -1);\n  }\n\n  getPasswords() {\n    return _.chain(this.state)\n      .get('document.passwords', [])\n      .filter(p => this.applyFilter(p))\n      .value();\n  }\n\n  createPassword(e) {\n    e.preventDefault();\n\n    const id = uuid();\n    const password = {\n      id,\n      title: '',\n      username: '',\n      password: '',\n      email: '',\n      website: '',\n      notes: ''\n    };\n\n    this.props.services.documentService.loadDocument().then(document => {\n      document.passwords = [...document.passwords, password];\n      this.props.services.documentService.updateDocument(document);\n    }).then(() => {\n      this.props.history.push(`/passwords/${id}`);\n    }).catch(() => {\n      this.props.history.push(\"/logout\");\n    });\n  }\n\n  componentDidMount() {\n    return this.props.services.documentService.loadDocument().then(document => {\n      this.setState({ document });\n    }).catch(() => {\n      this.props.history.push(\"/logout\");\n    });\n  }\n\n  render() {\n    if (!this.state.document) {\n      return (\n        <Loader />\n      );\n    }\n\n    return (\n      <div className=\"cp-passwords\">\n        <h1>Passwords</h1>\n        <form onSubmit={(e) => e.preventDefault()}>\n          <TextField\n            label=\"Search\"\n            id=\"search\"\n            icon=\"search\"\n            value={this.state.query}\n            onChange={query => this.setState({ query })} />\n        </form>\n\n        <div className=\"top-actions\">\n          <button\n            onClick={e => this.createPassword(e)}\n            className=\"waves-effect waves-light btn\">\n            <i className=\"material-icons left\">add</i>\n            Add\n          </button>\n        </div>\n\n        <Collection passwords={this.getPasswords()} />\n      </div>\n    )\n  }\n}","import React from 'react';\n\nexport default class TextArea extends React.Component {\n  componentDidMount() {\n    setTimeout(() => {\n      window.M.updateTextFields();\n      window.M.textareaAutoResize(window.$('textarea'))\n    }, 0);\n  }\n\n  render () {\n    const {\n      id,\n      label,\n      onChange,\n      value,\n      error,\n      icon\n    } = this.props;\n\n    return (\n      <div className=\"cp-text-field row\">\n        <div className=\"input-field col s12\">\n          {icon && (<i className=\"material-icons prefix\">{icon}</i>)}\n          <textarea\n            id={id}\n            className={`materialize-textarea ${error ? 'invalid' : ''}`}\n            value={value}\n            onChange={(e) => onChange(e.target.value)} />\n          <label htmlFor={id}>{label}</label>\n          <span className=\"helper-text\" data-error={error} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport TextField from \"../forms/TextField\";\nimport TextArea from \"../forms/TextArea\";\n\nimport './Details.scss';\n\nexport default class Details extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      item: {\n        title: '',\n        username: '',\n        password: '',\n        email: '',\n        website: '',\n        notes: ''\n      },\n      errors: {}\n    };\n  }\n\n  updateItem(field, value) {\n    this.setState({\n      item: {\n        ...this.state.item,\n        [field]: value\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      item: { ...this.props.item }\n    });\n\n  }\n\n  handleSave(e) {\n    e.preventDefault();\n    this.props.updatePassword(this.state.item);\n  }\n\n  handleDelete(e) {\n    e.preventDefault();\n\n    if (window.confirm('Are you sure you want to delete this password? This cannot be undone.')) {\n      return this.props.deletePassword(this.state.item);\n    }\n  }\n\n  render() {\n    const { item } = this.state;\n\n    if (!item) {\n      return null;\n    }\n\n    return (\n      <div className=\"cp-details\">\n        <h1 className=\"title\">{item.title || 'Untitled'}</h1>\n\n        <form>\n          <TextField\n            autoFocus\n            label=\"Title\"\n            id=\"title\"\n            icon=\"title\"\n            value={item.title}\n            error={this.state.errors.title}\n            onChange={val => this.updateItem('title', val)} />\n\n          <TextField\n            label=\"Username\"\n            id=\"username\"\n            icon=\"person\"\n            value={item.username}\n            error={this.state.errors.username}\n            onChange={val => this.updateItem('username', val)} />\n\n          <TextField\n            label=\"Password\"\n            id=\"password\"\n            type=\"text\"\n            icon=\"vpn_key\"\n            value={item.password}\n            error={this.state.errors.password}\n            onChange={val => this.updateItem('password', val)} />\n\n          <TextField\n            label=\"Email\"\n            id=\"email\"\n            type=\"text\"\n            icon=\"email\"\n            value={item.email}\n            error={this.state.errors.email}\n            onChange={val => this.updateItem('email', val)} />\n\n          <TextField\n            label=\"Website\"\n            id=\"website\"\n            type=\"text\"\n            icon=\"cloud\"\n            value={item.website}\n            error={this.state.errors.website}\n            onChange={val => this.updateItem('website', val)} />\n\n          <TextArea\n            label=\"Notes\"\n            id=\"notes\"\n            type=\"text\"\n            icon=\"note\"\n            value={item.notes}\n            error={this.state.errors.notes}\n            onChange={val => this.updateItem('notes', val)} />\n\n          <div className=\"actions\">\n            <Link className=\"waves-effect waves-light grey btn\" to=\"/passwords\">Cancel</Link>\n            <button\n              className=\"waves-effect waves-light btn\"\n              onClick={(e) => this.handleSave(e)}>Save</button>\n            <button\n              className=\"waves-effect waves-light btn btn-negative delete-button\"\n              onClick={(e) => this.handleDelete(e)}>\n              <i className=\"material-icons\">delete</i>\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport _ from 'lodash';\n\nimport Details from \"../components/passwords/Details\";\nimport Loader from \"../components/Loader\";\n\nexport default class View extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      document: null\n    };\n  }\n\n  updatePassword(password) {\n    const { id } = password;\n    this.props.services.documentService.loadDocument().then(document => {\n      const indexToUpdate = _.findIndex(document.passwords, { id });\n      document.passwords[indexToUpdate] = password;\n      this.props.services.documentService.updateDocument(document);\n    }).then(() => {\n      this.props.history.push(\"/passwords\");\n    }).catch(() => {\n      this.props.history.push(\"/logout\");\n    });\n  }\n\n  deletePassword(password) {\n    const { id } = password;\n    this.props.services.documentService.loadDocument().then(document => {\n      const indexToDelete = _.findIndex(document.passwords, { id });\n      document.passwords.splice(indexToDelete, 1);\n      this.props.services.documentService.updateDocument(document);\n    }).then(() => {\n      this.props.history.push(\"/passwords\");\n    }).catch(() => {\n      this.props.history.push(\"/logout\");\n    });\n  }\n\n  getPasswords() {\n    return _.get(this.state, 'document.passwords', []);\n  }\n\n  componentDidMount() {\n    return this.props.services.documentService.loadDocument().then(document => {\n      this.setState({ document });\n    }).catch(() => {\n      this.props.history.push(\"/logout\");\n    });\n  }\n\n  render() {\n    if (!this.state.document) {\n      return (\n        <Loader />\n      );\n    }\n\n    const { id } = this.props.match.params;\n    const passwords = this.getPasswords();\n    const item = _.find(passwords, { id });\n\n    if (!item) {\n      return <Redirect to=\"/passwords\" />;\n    }\n\n    return (\n      <div className=\"cp-view\">\n        <Details\n          item={item}\n          createPassword={() => this.createPassword()}\n          updatePassword={p => this.updatePassword(p)}\n          deletePassword={p => this.deletePassword(p)} />\n      </div>\n    );\n  }\n}","import React from \"react\";\nimport {BrowserRouter as Router, Redirect, Route, Switch} from \"react-router-dom\";\n\nimport Navigation from './components/Navigation';\n\nimport Home from './pages/Home';\nimport Register from './pages/Register';\nimport Login from './pages/Login';\nimport Logout from './pages/Logout';\n\nimport Account from \"./pages/Account\";\nimport Passwords from './pages/Passwords';\nimport View from \"./pages/View\";\n\nexport default class AppRouter extends React.Component {\n\n  renderPage(PageComponent, extraProps) {\n    return <PageComponent services={this.props.services} {...extraProps} />;\n  }\n\n  render() {\n    const { services } = this.props;\n    return (\n      <Router>\n        <header>\n          <Navigation services={services} />\n        </header>\n\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/\" exact render={props => this.renderPage(Home, props)} />\n            <Route path=\"/login\" exact render={props => this.renderPage(Login, props)} />\n            <Route path=\"/logout\" exact render={props => this.renderPage(Logout, props)} />\n            <Route path=\"/register\" exact render={props => this.renderPage(Register, props)} />\n            <Route path=\"/account\" exact render={props => this.renderPage(Account, props)} />\n            <Route path=\"/passwords\" exact render={props => this.renderPage(Passwords, props)} />\n            <Route path=\"/passwords/:id\" render={props => this.renderPage(View, props)} />\n            <Route render={() => <Redirect to=\"/\" />} />\n          </Switch>\n        </main>\n\n      </Router>\n    );\n  }\n}\n","import sha256 from 'crypto-js/sha256';\nimport AES  from 'crypto-js/aes';\nimport UTF_8 from 'crypto-js/enc-utf8';\n\nconst SALT_1 = 'CC352C99A14616AD22678563ECDA5';\nconst SALT_2 = '7767B9225CF66B418DD2A39CBC4AA';\n\nexport default class AuthService {\n  constructor({ apiService }) {\n    this.apiService = apiService;\n    this.document = null;\n  }\n\n  hashPassword(password) {\n    return sha256(password + SALT_1).toString();\n  }\n\n  hashToken(token) {\n    return sha256(token + SALT_2).toString();\n  }\n\n  passwordMatchesSession(password) {\n    return password && this.hashPassword(password) === this.getToken();\n  }\n\n  setCredentials({ username, password }) {\n    sessionStorage.setItem('username', username);\n    this.setToken(password);\n  }\n\n  setToken(password) {\n    sessionStorage.setItem('token', this.hashPassword(password));\n  }\n\n  sessionExists() {\n    return !!(this.getUsername() && this.getToken());\n  }\n\n  getUsername() {\n    return sessionStorage.getItem('username');\n  }\n\n  getToken() {\n    return sessionStorage.getItem('token');\n  }\n\n  logout() {\n    sessionStorage.clear();\n  }\n\n  getHashedToken() {\n    const token = this.getToken();\n    if (!token) {\n      return null;\n    }\n\n    return this.hashToken(token);\n  }\n\n  encryptWithToken(text, token = false) {\n    token = token || this.getToken();\n    return AES.encrypt(text, token).toString();\n  }\n\n  decryptWithToken(text) {\n    const token = this.getToken();\n    return AES.decrypt(text, token).toString(UTF_8);\n  }\n\n  getHeaders() {\n    const username = this.getUsername();\n    const token = this.getHashedToken();\n    const encoded = btoa(`${username}:${token}`);\n    return { 'Authorization': `Basic ${encoded}` };\n  }\n}\n","import axios from 'axios';\n\nexport default class APIService {\n  constructor({ baseURL, authService }) {\n    this.authService = authService;\n\n    axios.defaults.baseURL = baseURL;\n    // axios.defaults.headers.common['Authorization'] = this.getAuthHeader();\n    axios.defaults.headers.common['Accept'] = 'application/json';\n  }\n\n  get(path, params, headers) {\n    return axios({\n      method: 'get',\n      url: `/${path}`,\n      params,\n      headers\n    });\n  }\n\n  post(path, data, headers) {\n    return axios({\n      method: 'post',\n      url: `/${path}`,\n      data,\n      headers\n    });\n  }\n\n  put(path, data, headers) {\n    return axios({\n      method: 'put',\n      url: `/${path}`,\n      data,\n      headers\n    });\n  }\n\n  del(path, headers) {\n    return axios({\n      method: 'delete',\n      url: `/${path}`,\n      headers\n    });\n  }\n}\n","import _ from 'lodash';\n\nexport default class AuthService {\n  constructor({ apiService, authService }) {\n    this.apiService = apiService;\n    this.authService = authService;\n  }\n\n  createDocument({ username, password }) {\n    this.authService.setCredentials({ username, password });\n\n    const initialDocument = JSON.stringify({ passwords: [] });\n    const encryptedDocument = this.authService.encryptWithToken(initialDocument);\n\n    return this.apiService.post(\"document\", encryptedDocument, this.authService.getHeaders());\n  }\n\n  loadDocument() {\n    return this.apiService.get(\"document\", {}, this.authService.getHeaders()).then(resp => {\n      const encryptedDocument = _.get(resp, \"data.document\") || '{}';\n      const decryptedDocument = this.authService.decryptWithToken(encryptedDocument);\n      this.document = JSON.parse(decryptedDocument);\n      return this.document;\n    });\n  }\n\n  updateDocument(document) {\n    const unencryptedDocument = JSON.stringify(document);\n    const encryptedDocument = this.authService.encryptWithToken(unencryptedDocument);\n\n    return this.apiService.put(\"document\", encryptedDocument, this.authService.getHeaders());\n  }\n\n  deleteDocument() {\n    return this.apiService.del(\"document\", this.authService.getHeaders());\n  }\n\n  updatePassword(password) {\n    const token = this.authService.hashPassword(password);\n    const hashedToken = this.authService.hashToken(token);\n\n    return this.loadDocument().then(document => {\n      const unencryptedDocument = JSON.stringify(document);\n      const encryptedDocument = this.authService.encryptWithToken(unencryptedDocument, token);\n\n      return this.apiService.put(\n        \"document/password\",\n        { password: hashedToken, document: encryptedDocument },\n        this.authService.getHeaders()\n      ).then(() => this.authService.setToken(password));\n    });\n  }\n}","import React from 'react';\nimport Footer from './components/Footer';\nimport Routes from './Routes';\n\n// Services\nimport AuthService from \"./services/AuthService\";\nimport APIService from \"./services/APIService\";\nimport DocumentService from \"./services/DocumentService\";\n\nimport './App.scss';\n\n// Instantiate services\nconst apiService = new APIService({\n  baseURL: `${window.location.origin}/api/`\n});\n\nconst authService = new AuthService({\n  apiService\n});\n\nconst documentService = new DocumentService({\n  authService,\n  apiService\n});\n\nconst services = {\n  apiService,\n  authService,\n  documentService\n};\n\nwindow.services = services;\n\nfunction App() {\n  return (\n    <div className=\"cp-app\">\n      <Routes services={services} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}